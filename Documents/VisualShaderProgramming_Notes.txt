Nota 1 (17/07/17):

El principal aproblema que había encontrado durante el desarrollo del proyecto era como insertaría la información generada por 
la api en el código del shader.

El primer acercamiento se penso en literalmente inyectar código en archivo .hlsl, si embargo aún no sabía como haría esto.

Despues del alcanzar el nirvana mientras me bañaba, entendi que, solo tenia que generar un .hlsl con una 
estructura predefinida, un template o plantilla o machote, que  definiera un efecto, por ende en la api solo tendría que
rellenar ciertos parametros del shader con ciertos valores, los cuales se los enviare con constants buffers y asi no tengo que 
inyectar código, solo mover valores, en caso de querer otro efecto, solo se cambia el template de efecto. ^~^ 


Idea:

para la conexión de nodos, es preferible por ahora hacerlo con colisiónes por la posición del mouse,

para no llamar a revisión cada nodo existen, lo mejor seria tener un manager(syngraph) de los nodos, y dividir la zona en cuadrantes para saber
cuales revisar y mejorar el rendimiento.

Para generar la busqueda de los nodos por sectores lo mejor sería implementar un path finding.

TO DO: pensar en un mejor nombre para el motor de preferencia un nombre de mujer, debidpo al nombre del motor, un nombre nórdico?


Nota 2 (18/07/17): 

Despues de una rápida revisión con Prince, entendí que lo mejor es generer una clase que contenga todas las funciones que utilizare y todas esas funciones
sean templates.

To Do: Leer más sobre templates.

Nota 3 (18/07/17):

Cada modelo esta compuesto de varios meshes, por ende cada mesh necesita su propio material, el material consta de las texturas necesarias, las variables 
y matrices necesaras y el shader necesario, es un shader por cada mesh.



Nota 4(18/07/17):

Todos los objetos en el área de juego son Actores y lo que contienen los actores son componentes.
Los componentes son recursos.

*Actores, componentes

Cualquier cosa que biene de un archivo es un recuros:
solo debo tener una copia de cada recurso, y das insntancias


TO DO: Generar un manager de recursos, Genarar sistema de actores.